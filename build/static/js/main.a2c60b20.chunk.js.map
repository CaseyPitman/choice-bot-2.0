{"version":3,"sources":["choice-bot.jpg","header.js","inputNumber.js","choices.js","inputOptions.js","decision.js","randomNum.js","App.js","index.js"],"names":["module","exports","Header","className","src","require","alt","InputNumber","handleChange","event","number","target","value","props","updateNumber","handleSubmit","preventDefault","createChoices","changeView","this","currentView","onSubmit","placeholder","type","num","onChange","Component","Choice","id","input","key","text","onType","InputOptions","inputs","options","map","Decision","handleClick","reset","choice","onClick","randomNum","Math","floor","random","initialState","numOfOptions","App","setState","state","createdOptions","i","newOption","push","newView","optionNum","decision","filter","option","newText","updatedOptions","storeOption","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2c60b20.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/choice-bot.b4d2505d.jpg\";","import React from 'react'\n\n// This module returns the header\n\nconst Header = () => {\n   return (\n      <header className='header'>\n          <div className = 'headlines'>\n            <h1 className ='main-headline'>Choice Bot </h1>\n            <h2 className = 'version-text'>v.2.0</h2>\n            <h2 className = 'sub-headline'>Put your fate in my robotic hands puny human. </h2>\n          </div>\n          <img className = 'robot-image' src={require('./choice-bot.jpg')} alt = 'The Choicebot'/>\n        </header>\n   )\n}\n\nexport default Header;","import React, {Component} from 'react';\n\n//This module allows the user to input the number of options they have \n//when making their choice.\n\nclass InputNumber extends Component {\n\n   //Saves input number in state\n   handleChange = (event) =>{\n      let number = event.target.value;\n      this.props.updateNumber(number)\n   }\n\n   // Saves the choices and new view in state.\n   handleSubmit = (event) => {\n      event.preventDefault();\n      this.props.createChoices();\n      this.props.changeView(1)\n   }\n\n   render(){\n      //Hide or show based on state.currentView\n      let className = 'input-num-options';\n      if (this.props.currentView === 0){\n         className += ' show';\n      } else {\n         className += ' hide'\n      }\n\n      return (\n         <form className = {className} onSubmit = {this.handleSubmit}>\n            <h3 className = 'question'>How many options do you have?</h3>\n            <input \n               className = 'num-of-options' \n               placeholder = 'Enter a number'\n               type = 'number' value = {this.props.num} \n               onChange = {this.handleChange}/>\n            <br/>\n            <button className = 'submit-num-input' type = 'submit'>Submit Options</button>\n         </form>\n      )\n   }\n}\n\nexport default InputNumber;","import React,  {Component} from 'react';\n\n// This module renders a choice input field.\n\nclass Choice extends Component {\n\n   //Updates choice text in state when typing\n   handleChange = (event) => {\n      let id = this.props.input.key;\n      let text = event.target.value;\n      this.props.onType(id, text);\n   }\n\n\n   render(){\n      return (\n         <input \n            className = 'choice'  \n            type = 'text' \n            value = {this.props.text} \n            onChange = {this.handleChange}/>\n      )\n   }\n}\n\nexport default Choice;","import React from 'react';\nimport Choice from './choices'\n\n// This moudule will generate the specified number of choices as input \n//fields an allow the user to input their available choices.\n\n\nlet InputOptions = (props) => {\n   //Changes view after submission\n   let handleSubmit = (event) => {\n      event.preventDefault();\n      props.changeView(2)\n   }\n\n   //Renders the stipulated number of input fields\n   let renderInput = (input) => \n      <Choice \n      key = {input.key} \n      text = {input.text} \n      input = {input} \n      onType = {props.onType}/>\n\n   let inputs = props.options.map(renderInput);\n      \n   // Transition to next view\n   let className = 'input-options';\n   if (props.currentView === 1){\n      className += ' show';\n   } else {\n      className += ' hide';\n   }\n\n   return (\n      <form className = {className} onSubmit = {handleSubmit}>\n         <h3 className= 'question'> Enter your options.</h3>\n         <div className = 'choices'>\n            {inputs}\n         </div>\n         <button className = 'submit-options' type = 'submit'>Make a decision.</button>\n      </form>\n   )\n}\n\nexport default InputOptions;","import React, {Component} from 'react';\n\n\nclass Decision extends Component {\n   // This module renders the decision made by Choice Bot v.2.0\n   \n   //Reset to initial view and state\n   handleClick = () => {\n      this.props.reset();\n   }\n\n   render(){\n      //Shows/Hides depending on state.currentView\n      let className = 'decision';\n      if (this.props.currentView === 2){\n         className += ' show';\n      } else {\n         className += ' hide'\n      }\n\n      return (\n         <div className = {className}>\n            <h3 className = 'result-text'>You should choose</h3>\n            <h3 className = 'result'>{this.props.choice}</h3>\n            <button className = 'reset' onClick = {this.handleClick} >Make another choice.</button>\n         </div>\n      )\n   }\n}\n\nexport default Decision;","\n\n//Finds random number between 0 (inclusive) and given number. \n\nlet randomNum = (num) => Math.floor(Math.random() * num);\n\nexport default randomNum;","import React,  {Component} from 'react';\nimport styles from './styles.css';\nimport Header from './header';\nimport InputNumber from './inputNumber';\nimport InputOptions from './inputOptions';\nimport Decision from './decision';\nimport randomNum from './randomNum'\n\n\n//State upon start and/or reset\nconst initialState = {\n  numOfOptions: '',\n  options: [{\n    key:11,\n    text:'none'\n  }],\n  choice: '',\n  currentView: 0\n}\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = initialState;\n  }\n\n  // Update number\n  updateNumber = (number) => {\n    this.setState({numOfOptions: number})\n  }\n\n  //Create choices and store and state - number based on user input\n  createChoices = () => {\n    let number =  this.state.numOfOptions;\n    let createdOptions = [];\n    for (let i = 0; i < number; i++){\n      let newOption = {\n        key: i,\n        text: ''\n      }\n      createdOptions.push(newOption);\n    }\n    this.setState({options: [...createdOptions]});\n  }\n\n  //Transition between views\n  changeView = (newView) => {\n\n    //If moving to final screen (decision) then call for decision to be made\n    //and store in state. \n    if (newView === 2) {\n      //Get a random number\n      let optionNum= randomNum(this.state.numOfOptions);\n      //Filter for choice associated with random number via key\n      let decision = this.state.options.filter((option) => option.key === optionNum);\n      //Set decision as chosen choice text\n      decision = decision[0].text;\n\n      this.setState({\n        choice: decision\n      })\n    }\n    //Set the current view in state\n    this.setState({\n      currentView: newView\n    })\n  }\n  \n  //Set typed choices in state\n  onType = (id, newText) => {\n    let matchId = (option) => {\n      if (option.key !== id){\n        return option;\n      } else {\n        return {\n          ...option, \n          text: newText\n        }\n      }\n    }\n    let updatedOptions = this.state.options.map(matchId);\n    this.setState({options: updatedOptions});\n  }\n\n  //Reset app (view and state)\n  reset = () =>{\n    this.setState(initialState);\n  }\n\n  render(){\n    return (\n      <div className='App'>\n        <Header/>\n\n        <main className = 'container'>\n\n          {/* Visible on load */}\n          <InputNumber \n            num = {this.state.numOfOptions} \n            updateNumber = {this.updateNumber} \n            changeView = {this.changeView} \n            currentView = {this.state.currentView}\n            createChoices = {this.createChoices}/>\n\n          {/* Hidden on load, revealed after number of options input */}\n          <InputOptions \n            num = {this.state.numOfOptions} \n            options = {this.state.options} \n            changeView = {this.changeView} \n            currentView = {this.state.currentView}\n            numOfOptions = {this.state.numOfOptions}\n            storeOption = {this.storeOption}\n            onType = {this.onType}\n            />\n\n          {/* Hidden on load, revealed after choices entered */}\n          <Decision \n            changeView = {this.changeView} \n            currentView = {this.state.currentView}\n            choice = {this.state.choice}\n            reset = {this.reset}/>\n        </main>\n\n        <footer className = 'copyright'>\n          <h4 className = 'copyright-text'><span className = 'copyright-symbol'>&copy;</span> 2020 | Casey Pitman </h4>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}